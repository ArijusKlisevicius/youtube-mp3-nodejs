<!DOCTYPE html>
<html>

<head>
    <title>Youtube downloader</title>
    <style>
        #downloadBar {
            background-color: black;
            border-radius: 13px;
            /* (height of inner div) / 2 + padding */
            padding: 3px;
            width: 200px;
            margin-bottom: 10px;
        }

        #ytUrl {
            border-color: black;
            margin-bottom: 10px;
        }
        #insideBar {
            background-color: orange;
            width: 0%;
            /* Adjust with JavaScript */
            height: 20px;
            border-radius: 10px;
        }

        .lds-dual-ring {
            display: inline-block;
            width: 18px;
            height: 18px;
            position: absolute;
            /* display: none; */
        }

        .lds-dual-ring:after {
            content: " ";
            display: block;
            width: 13px;
            height: 13px;
            margin: 0px;
            border-radius: 50%;
            border: 4px solid #fff;
            border-color: #fff transparent #fff transparent;
            animation: lds-dual-ring 1.2s linear infinite;
        }

        @keyframes lds-dual-ring {
            0% {
                transform: rotate(0deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }
    </style>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>

<body>
   
    <form action='/post' method="POST" id="form">
        <label for="ytUrl">URL:</label>
        <input type="text" name="ytUrl" id="ytUrl">
        <input type="submit" value="Look" id="submitBtn" disabled>
    </form>
    <div id="downloadBar">
        <div class="lds-dual-ring"></div>
        <div id="insideBar">    </div>
    </div>
    <button id="downloadBtn" disabled>Download</button>
    <button id="downloadNext" disabled>Download Next</button>

    
    <script>
       
        $('.lds-dual-ring').hide();
        var fileAdress;

        const checkUrl = (url) => {
            var re = /^http(?:s?):\/\/(?:www\.)?youtu(?:be\.com\/watch\?v=|\.be\/)([\w\-\_]*)(&(amp;)?‌​[\w\?‌​=]*)?/;
            return re.test(url);
        }
        $('#downloadNext').click(() => {
            $('#downloadBar>div').css("width", 0);
            fileAdress = '';
            $('#submitBtn').prop('disabled', false);
            $('#ytUrl').val('');
            $('#downloadBar>div').css("background-color", 'orange');
            $('#ytUrl').css("border-color", 'black');
            $('#submitBtn').prop('disabled', true);


        })

        $('#downloadBtn').click(() => {
            console.log(fileAdress + "<------------- CIA");
            var url = new URL('/download/', window.location);
            console.log(url)
            var params = [['fileAdress', fileAdress]];
            url.search = new URLSearchParams(params).toString();

            fetch(url)
                .then(resp => {
                    return resp.blob();
                })
                .then(blob => {
                    const url = window.URL.createObjectURL(blob);
                    const a = document.createElement('a');
                    a.style.display = 'none';
                    console.log("Inside response?")
                    a.href = url;
                    a.download = fileAdress;
                    document.body.appendChild(a);
                    a.click();
                    window.URL.revokeObjectURL(url);
                })
                .catch((err) => alert(err));

            $('#downloadBtn').prop('disabled', true);
            $('#downloadNext').prop('disabled', false);
        })

        $('#ytUrl').keyup(() => {

            var isYtUrl = checkUrl($('#ytUrl').val());
            console.log(isYtUrl);
            if (isYtUrl) {
                $('#ytUrl').css("border-color", 'green');
                $('#submitBtn').prop('disabled', false);
            } else {
                $('#ytUrl').css("border-color", 'red');
                $('#submitBtn').prop('disabled', true);


            }
        })
        $('#form').submit((e) => {
            $('#submitBtn').prop('disabled', true);
            $('.lds-dual-ring').show();
            e.preventDefault();
            var filePath;
            var lastResponseLength = false;
            var re = /\d{1,3}\.\d{1,2}%/g;
            $.ajax({
                url: '/post',
                data: $("#form").serialize(),
                type: "POST",
                dataType: "text",
                processData: false,
                xhrFields: {
                    onprogress: function (e) {
                        var progressResponse;
                        var response = e.currentTarget.response;
                        if (lastResponseLength === false) {
                            progressResponse = response;
                            lastResponseLength = response.length;
                        }
                        else {
                            progressResponse = response.substring(lastResponseLength);
                            lastResponseLength = response.length;
                        }
                        console.log(progressResponse);
                        if (progressResponse.includes("[ffmpeg] Destination")) {
                            alert("Progress response = " + progressResponse);
                            var pathStart = progressResponse.lastIndexOf('[ffmpeg] Destination:') + 36;  
                            alert("pathStart = " + pathStart);

                            var pathEnd = progressResponse.lastIndexOf('.mp3') + 4;
                            alert("pathEnd = " + pathEnd);

                            filePath = progressResponse.substring(pathStart, pathEnd);
                            alert("filePath = " + filePath);
                            fileAdress = progressResponse.substring(pathStart, pathEnd);
                            alert("fileAdress" + fileAdress);
                        };
                        var m;
                        do {
                            m = re.exec(progressResponse);
                            if (m) {
                                $('#insideBar').css("width", m[0]);
                            }
                        } while (m);
                    }
                }
            })
                .done((data) => {
                    $('#downloadBtn').prop('disabled', false);
                    $('#downloadBar>div').css("background-color", 'green');
                    //    $('#downloadBtn>a').attr("href", '/' + filePath);

                })
                .fail((xhr, status, errorThrown) => {
                    alert("Sorry, there was a problem!");
                    console.log("Error: " + errorThrown);
                    console.log("Status: " + status);
                    console.dir(xhr);
                })
                .always((xhr, status) => {
                    // alert("The request iss complete!");
                });

        });




        // $('#form').submit(function (e) {
        //     e.preventDefault();
        //     console.log($('#form').serializeArray());
        //     fetch('/post', {
        //         method: 'POST',
        //         body: $('#form').serialize(),
        //         headers: {
        //             "Content-Type": "application/x-www-form-urlencoded",
        //             // "Content-Type": "multipart/form-data",
        //         },
        //     }).then(response => response.json())
        //         .then((data) => {
        //             console.log(data);
        //             var listItem = document.createElement("li");
        //             listItem.textContent = data.ytUrl;
        //             var uList = document.getElementById('uList');
        //             uList.appendChild(listItem);
        //         });
        // })
    </script>
</body>

</html>